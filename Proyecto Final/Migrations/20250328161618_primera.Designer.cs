// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Final.Data;

#nullable disable

namespace Proyecto_Final.Migrations
{
    [DbContext(typeof(DbConexion))]
    [Migration("20250328161618_primera")]
    partial class primera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Final.Modelo.Anuncio", b =>
                {
                    b.Property<int>("idanuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idanuncio"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("idevento")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("idanuncio");

                    b.HasIndex("idevento");

                    b.HasIndex("idusuario");

                    b.ToTable("Anuncio");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Boleto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("idEvento")
                        .HasColumnType("int");

                    b.Property<int>("idPago")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idEvento");

                    b.HasIndex("idPago");

                    b.HasIndex("idUsuario");

                    b.ToTable("Boleto");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Espacio", b =>
                {
                    b.Property<int>("idespacio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idespacio"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ubicacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("idespacio");

                    b.ToTable("Espacio");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.EspacioUsuario", b =>
                {
                    b.Property<int>("idespaciousuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idespaciousuario"));

                    b.Property<int>("idespacio")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.HasKey("idespaciousuario");

                    b.HasIndex("idespacio");

                    b.HasIndex("idusuario");

                    b.ToTable("EspacioUsuario");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Evento", b =>
                {
                    b.Property<int>("idevento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idevento"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("idespacio")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("precio")
                        .HasColumnType("int");

                    b.HasKey("idevento");

                    b.HasIndex("idespacio");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Fecha", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("fecha_final")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("idevento")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idevento");

                    b.ToTable("Fecha");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Imagenes", b =>
                {
                    b.Property<int>("idimagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idimagen"));

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idimagen");

                    b.ToTable("Imagen");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Lista", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("idboleto")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idboleto");

                    b.HasIndex("idusuario");

                    b.ToTable("Lista");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Modulos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ruta")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Pago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("monto")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Persona", b =>
                {
                    b.Property<int>("idpersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idpersona"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("idpersona");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.RolModulos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idmodulo")
                        .HasColumnType("int");

                    b.Property<int>("idrol")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idmodulo");

                    b.HasIndex("idrol");

                    b.ToTable("RolModulos");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre_rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Tarjeta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cvv")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("idPago")
                        .HasColumnType("int");

                    b.Property<string>("nombreTitular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("numeroTarjeta")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idPago");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Transferencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idPago")
                        .HasColumnType("int");

                    b.Property<string>("nombreBanco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("idPago");

                    b.ToTable("Transferencia");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Usuario", b =>
                {
                    b.Property<int>("idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idusuario"));

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idpersona")
                        .HasColumnType("int");

                    b.HasKey("idusuario");

                    b.HasIndex("idpersona");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.UsuarioRol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idrol")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idrol");

                    b.HasIndex("idusuario");

                    b.ToTable("UsuarioRol");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Anuncio", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Evento", "evento")
                        .WithMany()
                        .HasForeignKey("idevento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Final.Modelo.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("evento");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Boleto", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Evento", "evento")
                        .WithMany()
                        .HasForeignKey("idEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Final.Modelo.Pago", "pago")
                        .WithMany()
                        .HasForeignKey("idPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Final.Modelo.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("evento");

                    b.Navigation("pago");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.EspacioUsuario", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Espacio", "espacio")
                        .WithMany()
                        .HasForeignKey("idespacio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Final.Modelo.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("espacio");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Evento", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Espacio", "espacio")
                        .WithMany()
                        .HasForeignKey("idespacio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("espacio");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Fecha", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Evento", "evento")
                        .WithMany()
                        .HasForeignKey("idevento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("evento");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Lista", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Boleto", "boleto")
                        .WithMany()
                        .HasForeignKey("idboleto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Final.Modelo.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("boleto");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.RolModulos", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Modulos", "modulos")
                        .WithMany()
                        .HasForeignKey("idmodulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Final.Modelo.Roles", "roles")
                        .WithMany()
                        .HasForeignKey("idrol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modulos");

                    b.Navigation("roles");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Tarjeta", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Pago", "pago")
                        .WithMany()
                        .HasForeignKey("idPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pago");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Transferencia", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Pago", "pago")
                        .WithMany()
                        .HasForeignKey("idPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pago");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.Usuario", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");
                });

            modelBuilder.Entity("Proyecto_Final.Modelo.UsuarioRol", b =>
                {
                    b.HasOne("Proyecto_Final.Modelo.Roles", "roles")
                        .WithMany()
                        .HasForeignKey("idrol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Final.Modelo.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roles");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
